setwd("/Users/Ofix/Documents/Fac/internat/Recherche/projets/synchro/synchroData/Git/INCANT/")
library("lme4")
## For managing data frames easilly : rbinds function
library("plyr")
## For editing string
library("stringr")
fullNameList <- list.files("Data/CSV/MotionHistory/raw", full.names=TRUE)
filesList <- list.files("Data/CSV/MotionHistory/raw", full.names=FALSE)
indexList <- c()
indexList <- c()
for (i in filesList){
a <- str_count(i)-17
name <- substr(i, 1, a)
indexList <- c(indexList, name)
}
importdata <-function(fullNameList){
data <- c()
for (i in fullNameList){
dataAlone <- read.csv(i)
mydata.nas <- apply(dataAlone[,ParticipantsList], 1, function(x){all(is.na(x))})
dataAlone <- dataAlone[!mydata.nas,]
data <- rbind(data, dataAlone)
}
return (data)
}
data <- importdata(fullNameList)
rm(list = ls(all.names = TRUE))
setwd("/Users/Ofix/Documents/Fac/internat/Recherche/projets/synchro/synchroData/Git/INCANT/")
# Loading libraries
## For making models
library("lme4")
## For managing data frames easilly : rbinds function
library("plyr")
## For editing string
library("stringr")
fullNameList <- list.files("Data/CSV/MotionHistory/raw", full.names=TRUE)
filesList <- list.files("Data/CSV/MotionHistory/raw", full.names=FALSE)
indexList <- c()
for (i in filesList){
a <- str_count(i)-17
name <- substr(i, 1, a)
indexList <- c(indexList, name)
}
importdata <-function(fullNameList){
data <- c()
for (i in fullNameList){
dataAlone <- read.csv(i)
mydata.nas <- apply(dataAlone[,ParticipantsList], 1, function(x){all(is.na(x))})
dataAlone <- dataAlone[!mydata.nas,]
data <- rbind(data, dataAlone)
}
return (data)
}
data <- importdata(fullNameList)
ParticipantsList <- c("father", "mother", "patient", "therapist")
## Code of the video only without extention of the video and .csv
indexList <- c()
for (i in filesList){
a <- str_count(i)-17
name <- substr(i, 1, a)
indexList <- c(indexList, name)
}
importdata <-function(fullNameList){
data <- c()
for (i in fullNameList){
dataAlone <- read.csv(i)
mydata.nas <- apply(dataAlone[,ParticipantsList], 1, function(x){all(is.na(x))})
dataAlone <- dataAlone[!mydata.nas,]
data <- rbind(data, dataAlone)
}
return (data)
}
data <- importdata(fullNameList)
MeanMotionByTime <- function(subject, indexOfvideos=1:NumberOfvideos, interval, data){
x <- c()
for (file in indexList[indexOfvideos]){
dataVector <- data[which(data$indexList==file), subject]
## with ceiling : superior limit of the round
IntervalNumbersVideo <- ceiling(length(dataVector)/interval)
for (i in 1:IntervalNumbersVideo){
borneinf<- 1+(i-1)*interval
bornesup <-i*interval
dataVectorInterval <- dataVector[borneinf:bornesup]
mean <- mean(dataVectorInterval, na.rm=TRUE)
x <- c(x, mean)}}
return (x)}
SlidingInterval <- function(subject, indexOfvideos=1:NumberOfvideos, interval, data)
{x <- c()
for (file in indexList[indexOfvideos]){
dataVector <- data[which(data$indexList==file), subject]
NBofAnalysedFrames <- length(dataVector)-interval+1
for (i in 1:NBofAnalysedFrames){
borneinf<- (i)
bornesup <-(interval-1+i)
dataVectorInterval <- dataVector[borneinf:bornesup]
mean <- mean(dataVectorInterval, na.rm=TRUE)
x <- c(x, mean)}}
return (x)}
labelvideolist  <-c()
for (i in indexList){
a <- str_count(i)
name <- substr(i, 6, a)
labelvideolist <- c(labelvideolist, name)
}
FilesName <- data.frame(unique(data$file), filesList, indexList, labelvideolist)
NumberOfvideos <- length(indexList)
colOrderList  <- c("blue","red", "green","orange")
data <- merge(data, FilesName, by.x="file", by.y="unique.data.file.", all=TRUE)
data$timeMin <- data$frame/(25*60)
data$logFather <- log(data$father)
data$norm.logFather <- data$logFather+20
data$norm.logFather[which(data$norm.logFather==-Inf)] <- NA
data$logMother <- log(data$mother)
data$norm.logMother[which(data$norm.logMother==-Inf)] <- NA
data$logPatient <- log(data$patient)
data$norm.logMother <- data$logMother+20
data$norm.logPatient <- data$logPatient+20
data$norm.logPatient[which(data$norm.logPatient==-Inf)] <- NA
data$logTherapist <- log(data$therapist)
data$norm.logTherapist <- data$logTherapist+20
data$norm.logTherapist[which(data$norm.logTherapist==-Inf)] <- NA
data$file <- NULL
data$filesList <- NULL
data$norm.logMother <- data$logMother+20
data$norm.logMother[which(data$norm.logMother==-Inf)] <- NA
str(data)
summary(data)
videoLengthList <-c()
for (i in indexList){
index <- which(data$indexList==i)
videolength <- max(data$timeMin[index])
videoLengthList <-c(videoLengthList,videolength)}
par(mar=c(4,4,3,1))
barplot(videoLengthList, col="cornflowerblue", cex.axis=0.6, cex.names=0.4,
ylab="Minutes", xlab="Video Name", las=2, names=labelvideolist,
main="Length of each F1044 video (min)")
abline(h = mean(videoLengthList), lwd=2, lty=2)
text(1,27, "Mean")
barplot(table(data$labelvideolist), col="cornflowerblue", cex.axis=0.6, cex.names=0.5, cex.lab=0.8,
main="Number of frames in each F1044 video", cex.main=0.8, ylab="Frame number",
names = labelvideolist, xlab="Video Name", las=1)
abline(h = mean(table(data$labelvideolist)), lwd=2, lty=2)
text(1,39000, "Mean")
```
tab <- cbind(table(is.na(data$father)),table(is.na(data$mother)),table(is.na(data$patient)), table(is.na(data$therapist)))
par(mar=c(4,4,5,1))
barplot(tab, cex.axis = 0.7, las=2, names=ParticipantsList,
main="Number of available data by participant",
beside=TRUE, las=1, col=terrain.colors(2), ylim=c(0,650000),
ylab="Available data (non NA)", xlab="Participants")
legend("top", c("T", "F"), fill=terrain.colors(2))
meanMotionList <-c()
meanMotion <- function(subject){
for (i in indexList){
index <- which(data$indexList==i)
Motionsubject<- mean(data[index,subject], na.rm=TRUE)
meanMotionList <-c(meanMotionList, Motionsubject)}
return (meanMotionList)}
Motionfatherlist <- meanMotion("father")
MotionMotherList <- meanMotion("mother")
MotionTherapistList <- meanMotion("therapist")
MotionPatientList <- meanMotion("patient")
MotionMeanList <- rbind(Motionfatherlist, MotionMotherList, MotionPatientList, MotionTherapistList)
par(mar=c(4,4,2,1))
barplot(MotionMeanList, names=labelvideolist, las=2, cex.axis = 0.6, cex.names=0.6,
main="Mean Motion history in each video", beside=TRUE,
col=colOrderList, ylab="Mean motion history", xlab="Video index")
par(mar=c(1,0.5,0.5,1))
legend("top", inset=.05, ParticipantsList,
fill=colOrderList, cex=0.7)
par(mar=c(4,4,2,2))
boxplot(data$father, data$mother, data$therapist, data$patient,
col=colOrderList,
names=ParticipantsList,
main= "Box plots of the Motion history by frame (raw data), all videos", las=1, ylab="Motion history", xlab="Participant")
par(mar=c(1,0.5,0.5,1))
legend("topleft", ParticipantsList, fill=colOrderList, cex=0.7)
```
par(mar=c(4,4,2,2))
hist(data$father, col=colOrderList[1])
hist(data$mother, col=colOrderList[2])
hist(data$patient, col=colOrderList[3])
hist(data$therapist, col=colOrderList[4])
dFather <- density(data$father, na.rm=TRUE)
dPatient <- density(data$patient, na.rm=TRUE)
par(mar=c(4,4,2,2))
lines(dMother,col=colOrderList[2])
lines(dTherapist,col=colOrderList[4])
legend("topright", ParticipantsList, fill=colOrderList, cex=0.7)
dTherapist <- density(data$therapist, na.rm=TRUE)
par(mar=c(1,0.5,0.5,1))
plot(dFather, main="Kernel density plot", col=colOrderList[1])
dMother <- density(data$mother, na.rm=TRUE)
lines(dPatient,col=colOrderList[3])
dTherapist <- density(data$therapist, na.rm=TRUE)
par(mar=c(4,4,2,2))
plot(dFather, main="Kernel density plot", col=colOrderList[1])
lines(dMother,col=colOrderList[2])
lines(dPatient,col=colOrderList[3])
lines(dTherapist,col=colOrderList[4])
par(mar=c(1,0.5,0.5,1))
legend("topright", ParticipantsList, fill=colOrderList, cex=0.7)
par(mar=c(4,4,2,2))
boxplot(data$norm.logFather, data$norm.logMother, data$norm.logPatient, data$norm.logTherapist,
col=colOrderList,
names=ParticipantsList,
main= "Box plots of the Motion history by frame (raw data), all videos", las=1, ylab="Motion history", xlab="Participant")
par(mar=c(1,0.5,0.5,1))
legend("topleft", ParticipantsList, fill=colOrderList, cex=0.7)
par(mar=c(4,4,2,2))
hist(data$norm.logFather, col=colOrderList[1])
hist(data$norm.logMother, col=colOrderList[2])
hist(data$norm.logPatient, col=colOrderList[3])
hist(data$norm.logTherapist, col=colOrderList[4])
dlogFather <- density(data$norm.logFather, na.rm=TRUE)
dlogMother <- density(data$norm.logMother, na.rm=TRUE)
dlogPatient <- density(data$norm.logPatient, na.rm=TRUE)
dlogTherapist <- density(data$norm.logTherapist, na.rm=TRUE)
par(mar=c(4,4,2,2))
plot(dlogFather, main="Kernel density plot", col=colOrderList[1])
lines(dlogMother,col=colOrderList[2])
lines(dlogPatient,col=colOrderList[3])
lines(dlogTherapist,col=colOrderList[4])
par(mar=c(1,0.5,0.5,1))
legend("topright", ParticipantsList, fill=colOrderList, cex=0.7)
rawFatherF1044C1 <- data[which(data$indexList=="F1044C1"),]$father
rawMotherF1044C1 <- data[which(data$indexList=="F1044C1"),]$mother
rawTherapistF1044C1 <- data[which(data$indexList=="F1044C1"),]$therapist
logFatherF1044C1 <- data[which(data$indexList=="F1044C1"),]$norm.logFather
logMotherF1044C1 <- data[which(data$indexList=="F1044C1"),]$norm.logMother
logTherapistF1044C1 <- data[which(data$indexList=="F1044C1"),]$norm.logTherapist
summary(rawFatherF1044C1)
summary(rawMotherF1044C1)
summary(rawTherapistF1044C1)
summary(logFatherF1044C1)
summary(logMotherF1044C1)
summary(logTherapistF1044C1)
par(mar=c(4,4,3,2))
boxplot(rawFatherF1044C1, rawMotherF1044C1, rawTherapistF1044C1,
col=colOrderList[c(1,2,4)],
names=ParticipantsList[c(1,2,4)],
main= "Box plots of motion history raw data on F1044C1 video", las=1, ylab ="Motion history", xlab="Participants")
par(mar=c(1,0.5,0.5,1))
legend("topleft", ParticipantsList[c(1,2,4)], fill=colOrderList, cex=0.7)
par(mar=c(4,4,3,2))
boxplot(logFatherF1044C1, logMotherF1044C1, logTherapistF1044C1,
col=colOrderList[c(1,2,4)],
names=ParticipantsList[c(1,2,4)],
main= "Box plots of log of motion history on F1044C1 video", las=1, xlab ="Motion history", ylab="Participants")
par(mar=c(1,0.5,0.5,1))
legend("topleft", ParticipantsList[c(1,2,4)], fill=colOrderList, cex=0.7)
slidedFatherF1044C1 <- SlidingInterval("father", 1 , 5, data)
slidedMotherF1044C1 <- SlidingInterval("mother", 1 , 5, data)
slidedPatientF1044C1 <- SlidingInterval("patient", 1 , 5, data)
slidedTherapistF1044C1 <- SlidingInterval("therapist", 1 , 5, data)
slidedLogFatherF1044C1 <- SlidingInterval("norm.logFather", 1 , 5, data)
slidedLogMotherF1044C1 <- SlidingInterval("norm.logMother", 1 , 5, data)
slidedLogPatientF1044C1 <- SlidingInterval("norm.logPatient", 1 , 5, data)
slidedLogTherapistF1044C1 <- SlidingInterval("norm.logTherapist", 1 , 5, data)
summary(slidedFatherF1044C1)
summary(slidedMotherF1044C1)
summary(slidedPatientF1044C1)
summary(slidedTherapistF1044C1)
summary(slidedLogFatherF1044C1)
summary(slidedLogMotherF1044C1)
summary(slidedLogPatientF1044C1)
summary(slidedLogTherapistF1044C1)
fatherFiveF1044C1<- MeanMotionByTime("father", indexOfvideos=1, interval=5, data)
motherFiveF1044C1 <- MeanMotionByTime("mother", indexOfvideos=1, interval=5, data)
therapistFiveF1044C1 <- MeanMotionByTime("therapist", indexOfvideos=1, interval=5, data)
fatherLogFiveF1044C1<- MeanMotionByTime("norm.logFather", indexOfvideos=1, interval=5, data)
motherLogFiveF1044C1 <- MeanMotionByTime("norm.logMother", indexOfvideos=1, interval=5, data)
therapistLogFiveF1044C1 <- MeanMotionByTime("norm.logTherapist", indexOfvideos=1, interval=5, data)
summary(fatherFiveF1044C1)
summary(motherFiveF1044C1)
summary(therapistFiveF1044C1)
summary(fatherLogFiveF1044C1)
summary(motherLogFiveF1044C1)
summary(therapistLogFiveF1044C1)
par(mar=c(4,4,4,2))
plot(1:250, data$father[3:252], main="Mean motion history, (Sliding 5 frames interval raw data)
on F1044C1 video, first 10 seconds ", xlab="Frame index (25/s)",
ylab="Motion history",
col="blue", type="l", lty=2, lwd=0.5)
lines(slidedFatherF1044C1[1:250],  col="blue", lty=1)
lines(data$mother[3:252],  col="red", lty=2, lwd=0.5)
lines(slidedMotherF1044C1[1:250],  col="red", lty=1)
lines(data$therapist[3:252],  col="orange", lty=2, lwd=0.5)
lines(slidedTherapistF1044C1[1:250],  col="orange", lty=1)
legend("topleft", c("Raw data", "Mean on sliding Interval") , lty=c(2, 1), cex=0.7)
legend("topright", ParticipantsList[c(1,2,4)], fill=colOrderList[c(1,2,4)], cex=0.7)
par(mar=c(4,4,4,2))
plot(1:250, data$father[3:252], main="Mean motion history, (Sliding 5 frames interval raw data)
lines(data$mother[3:252],  col="red", lty=2, lwd=0.5)
par(mar=c(4,4,4,2))
plot(1:250, data$father[3:252], main="Mean motion history, (Sliding 5 frames interval raw data)
on F1044C1 video, first 10 seconds ", xlab="Frame index (25/s)",
ylab="Motion history",
col="blue", type="l", lty=2, lwd=0.5)
lines(data$mother[3:252],  col="red", lty=2, lwd=0.5)
lines(data$therapist[3:252],  col="orange", lty=2, lwd=0.5)
legend("topleft", c("Raw data", "Mean on sliding Interval") , lty=c(2, 1), cex=0.7)
legend("topright", ParticipantsList[c(1,2,4)], fill=colOrderList[c(1,2,4)], cex=0.7)
par(mar=c(4,4,4,2))
plot(1:250, data$father[3:63], main="Mean motion history, (Sliding 5 frames interval raw data)
on F1044C1 video, first 10 seconds ", xlab="Frame index (25/s)",
ylab="Motion history",
col="blue", type="l", lty=2, lwd=0.5)
lines(slidedFatherF1044C1[1:75],  col="blue", lty=1)
legend("topleft", c("Raw data", "Mean on sliding Interval") , lty=c(2, 1), cex=0.7)
par(mar=c(4,4,4,2))
plot(1:250, data$father[3:78], main="Mean motion history, (Sliding 5 frames interval raw data)
on F1044C1 video, first 10 seconds ", xlab="Frame index (25/s)",
ylab="Motion history",
col="blue", type="l", lty=2, lwd=0.5)
lines(slidedFatherF1044C1[1:75],  col="blue", lty=1)
legend("topleft", c("Raw data", "Mean on sliding Interval") , lty=c(2, 1), cex=0.7)
par(mar=c(4,4,4,2))
plot(1:75, data$father[3:78], main="Mean motion history, (Sliding 5 frames interval raw data)
on F1044C1 video, first 10 seconds ", xlab="Frame index (25/s)",
ylab="Motion history",
col="blue", type="l", lty=2, lwd=0.5)
lines(slidedFatherF1044C1[1:75],  col="blue", lty=1)
legend("topleft", c("Raw data", "Mean on sliding Interval") , lty=c(2, 1), cex=0.7)
par(mar=c(4,4,4,2))
plot(1:75, data$father[3:78], main="Mean motion history, (Sliding 5 frames interval raw data)
on F1044C1 video, first 10 seconds ", xlab="Frame index (25/s)",
ylab="Motion history",
col="blue", type="l", lty=2, lwd=0.5)
par(mar=c(4,4,4,2))
plot(1:75, data$father[3:79], main="Mean motion history, (Sliding 5 frames interval raw data)
on F1044C1 video, first 10 seconds ", xlab="Frame index (25/s)",
ylab="Motion history",
col="blue", type="l", lty=2, lwd=0.5)
lines(slidedFatherF1044C1[1:75],  col="blue", lty=1)
legend("topleft", c("Raw data", "Mean on sliding Interval") , lty=c(2, 1), cex=0.7)
par(mar=c(4,4,4,2))
plot(1:75, data$father[3:77], main="Mean motion history, (Sliding 5 frames interval raw data)
on F1044C1 video, first 10 seconds ", xlab="Frame index (25/s)",
ylab="Motion history",
col="blue", type="l", lty=2, lwd=0.5)
lines(slidedFatherF1044C1[1:75],  col="blue", lty=1)
legend("topleft", c("Raw data", "Mean on sliding Interval") , lty=c(2, 1), cex=0.7)
par(mar=c(4,4,4,2))
plot(1:75, data$father[3:77], main="Mean motion history, (Sliding 5 frames interval raw data)
on F1044C1 video, first 10 seconds ", xlab="Frame index (25/s)",
ylab="Motion history",
col="blue", type="l", lty=2, lwd=0.5)
legend("topleft", c("Raw data", "Mean on sliding Interval") , lty=c(2, 1), cex=0.7)
par(mar=c(4,4,4,2))
plot(1:75, data$father[3:77], main="Mean motion history, (Sliding 5 frames interval raw data)
on F1044C1 video, first 10 seconds ", xlab="Frame index (25/s)",
ylab="Motion history",
col="blue", type="l", lty=2, lwd=0.5)
legend("topright", c("Raw data", "Mean on sliding Interval") , lty=c(2, 1), cex=0.7)
par(mar=c(4,4,4,2))
plot(1:250, data$norm.logFather[3:252], main="Mean motion history, (Sliding 5 frames interval log data)
on F1044C1 video, first 10 seconds", xlab="Frame index (25/s)",
ylab="Motion history",
col="blue", type="l", lty=2, lwd=0.5)
lines(slidedLogFatherF1044C1[1:250],  col="blue", lty=1)
lines(data$norm.logMother[3:252],  col="red", lty=2, lwd=0.5)
lines(slidedLogMotherF1044C1[1:250],  col="red", lty=1)
lines(data$norm.logTherapist[3:252],  col="orange", lty=2, lwd=0.5)
lines(slidedLogTherapistF1044C1[1:250],  col="orange", lty=1)
legend("topleft", c("Raw data", "Mean on sliding Interval") , lty=c(2, 1), cex=0.7)
legend("topright", ParticipantsList[c(1,2,4)], fill=colOrderList[c(1,2,4)], cex=0.7)
plot (1:50, fatherFiveF1044C1[1:50], type="l", col="blue",
main="Mean Motion history (non overlapping 5 frames
intervals) for father on F1044C video, first 10 seconds",
ylab="Motion history", xlab="Frame index (each 5 frames)" )
lines(motherFiveF1044C1[1:50], col="red", lty=1)
lines(therapistFiveF1044C1[1:50], col="green", lty=1)
legend("topleft", "Mean on non overlapping Interval" , lty=1, cex=0.7)
legend("topright", ParticipantsList[c(1,2,4)], fill=colOrderList, cex=0.7)
for (i in 1:NumberOfvideos){
fatherMinute<- MeanMotionByTime("father", indexOfvideos=i, interval=1500, data)
MotherMinute<- MeanMotionByTime("mother", indexOfvideos=i, interval=1500, data)
TherapistMinute<- MeanMotionByTime("therapist", indexOfvideos=i, interval=1500, data)
PatientMinute<- MeanMotionByTime("patient", indexOfvideos=i, interval=1500, data)
par(mar=c(4,4,4,2))
plot (1:length(fatherMinute), fatherMinute, type="l", col="blue",
main=paste("Mean motion history (non overlaping minute intervals)
on F1044", labelvideolist[i], " video" , sep=""),
ylab="Motion history", xlab="Time by Minute", ylim=c(0, 12E-03),
xaxp=c(0, length(fatherMinute), length(fatherMinute)))
lines(MotherMinute, col="red")
lines(TherapistMinute, col="orange")
lines(PatientMinute, col="green")
legend("top", inset=.05, ParticipantsList,
fill=colOrderList, cex=0.7)}
str(data)
for (i in 1:NumberOfvideos){
fatherMinute<- MeanMotionByTime("norm.logFather", indexOfvideos=i, interval=1500, data)
MotherMinute<- MeanMotionByTime("norm.logMother", indexOfvideos=i, interval=1500, data)
TherapistMinute<- MeanMotionByTime("norm.logTherapist", indexOfvideos=i, interval=1500, data)
PatientMinute<- MeanMotionByTime("norm.logPatient", indexOfvideos=i, interval=1500, data)
par(mar=c(4,4,4,2))
plot (1:length(fatherMinute), fatherMinute, type="l", col="blue",
main=paste("Mean motion history (non overlaping minute intervals)
on F1044", labelvideolist[i], " video" , sep=""),
ylab="Motion history", xlab="Time by Minute", ylim=c(0, 12E-03),
xaxp=c(0, length(fatherMinute), length(fatherMinute)))
lines(MotherMinute, col="red")
lines(TherapistMinute, col="orange")
lines(PatientMinute, col="green")
legend("top", inset=.05, ParticipantsList,
fill=colOrderList, cex=0.7)}
for (i in 1:NumberOfvideos){
fatherMinute<- MeanMotionByTime("norm.logFather", indexOfvideos=i, interval=1500, data)
MotherMinute<- MeanMotionByTime("norm.logMother", indexOfvideos=i, interval=1500, data)
TherapistMinute<- MeanMotionByTime("norm.logTherapist", indexOfvideos=i, interval=1500, data)
PatientMinute<- MeanMotionByTime("norm.logPatient", indexOfvideos=i, interval=1500, data)
par(mar=c(4,4,4,2))
plot (1:length(fatherMinute), fatherMinute, type="l", col="blue",
main=paste("Mean motion history (non overlaping minute intervals)
on F1044", labelvideolist[i], " video" , sep=""),
ylab="Motion history", xlab="Time by Minute",
#, ylim=c(0, 12E-03),
xaxp=c(0, length(fatherMinute), length(fatherMinute)))
lines(MotherMinute, col="red")
lines(TherapistMinute, col="orange")
lines(PatientMinute, col="green")
legend("top", inset=.05, ParticipantsList,
fill=colOrderList, cex=0.7)}
for (i in 1:NumberOfvideos){
fatherMinute<- MeanMotionByTime("norm.logFather", indexOfvideos=i, interval=1500, data)
MotherMinute<- MeanMotionByTime("norm.logMother", indexOfvideos=i, interval=1500, data)
TherapistMinute<- MeanMotionByTime("norm.logTherapist", indexOfvideos=i, interval=1500, data)
PatientMinute<- MeanMotionByTime("norm.logPatient", indexOfvideos=i, interval=1500, data)
par(mar=c(4,4,4,2))
plot (1:length(fatherMinute), fatherMinute, type="l", col="blue",
main=paste("Mean motion history (non overlaping minute intervals)
on F1044", labelvideolist[i], " video" , sep=""),
ylab="Motion history", xlab="Time by Minute",
#, ylim=c(0, 12E-03),
xaxp=c(0, length(fatherMinute), length(fatherMinute)))
lines(MotherMinute, col="red")
lines(TherapistMinute, col="orange")
lines(PatientMinute, col="green")
legend("top", inset=.05, ParticipantsList,
fill=colOrderList, cex=0.7)}
for (i in 1:NumberOfvideos){
fatherMinute<- MeanMotionByTime("norm.logFather", indexOfvideos=i, interval=1500, data)
MotherMinute<- MeanMotionByTime("norm.logMother", indexOfvideos=i, interval=1500, data)
TherapistMinute<- MeanMotionByTime("norm.logTherapist", indexOfvideos=i, interval=1500, data)
PatientMinute<- MeanMotionByTime("norm.logPatient", indexOfvideos=i, interval=1500, data)
par(mar=c(4,4,4,2))
plot (1:length(fatherMinute), fatherMinute, type="l", col="blue",
main=paste("Mean motion history (non overlaping minute intervals)
on F1044", labelvideolist[i], " video" , sep=""),
ylab="Motion history", xlab="Time by Minute", ylim=c(9, 15),
xaxp=c(0, length(fatherMinute), length(fatherMinute)))
lines(MotherMinute, col="red")
lines(TherapistMinute, col="orange")
lines(PatientMinute, col="green")
legend("top", inset=.05, ParticipantsList,
fill=colOrderList, cex=0.7)}
slidedFather <- SlidingInterval("father", 1 , 50, data)
slidedMother <- SlidingInterval("mother", 1 , 50, data)
slidedTherapist <- SlidingInterval("therapist", 1 , 50, data)
slidedPatient <- SlidingInterval("patient", 1 , 50, data)
framesByMinute <- 60*25
F1044C_Minutes <- ceiling(length(slidedfather)/framesByMinute)
for (i in 1:(F1044C_Minutes-1)){
par(mar=c(4,4,4,2))
borneInf <- i+framesByMinute*(i-1)
borneSup <- i+i*framesByMinute
slidedFatherMinute<-slidedFather[borneInf:borneSup]
slidedMotherMinute<-slidedMother[borneInf:borneSup]
slidedTherapistMinute<-slidedTherapist[borneInf:borneSup]
slidedPatientMinute<-slidedPatient[borneInf:borneSup]
slidedVideoDF <- data.frame(slidedFatherMinute, slidedMotherMinute, slidedTherapistMinute, slidedPatientMinute, "frames"= 1:length(slidedFatherMinute),  "minute"= 1:length(slidedFatherMinute)/25)
str (slidedVideoDF)
plot (slidedVideoDF$minute, slidedVideoDF$slidedMotherMinute, type="l", col="red",
main=paste("Motion history with Sliding interval function during
minute ", i, " in F1044C video", sep=""),
ylab="Motion history", xlab="Number of frame", ylim=c(0, 12E-03))
#     xaxp=c(0, length(slidedFatherMinute), length(slidedFatherMinute)))
lines(slidedVideoDF$minute, slidedVideoDF$slidedFatherMinute, col="blue")
lines(slidedVideoDF$minute, slidedVideoDF$slidedTherapistMinute, col="orange")
lines(slidedVideoDF$minute, slidedVideoDF$slidedPatientMinute, col="green")
legend("top", inset=.05, ParticipantsList,
fill=colOrderList, cex=0.7)}
framesByMinute <- 60*25
F1044C_Minutes <- ceiling(length(slidedFather)/framesByMinute)
for (i in 1:(F1044C_Minutes-1)){
par(mar=c(4,4,4,2))
borneInf <- i+framesByMinute*(i-1)
borneSup <- i+i*framesByMinute
slidedFatherMinute<-slidedFather[borneInf:borneSup]
slidedMotherMinute<-slidedMother[borneInf:borneSup]
slidedTherapistMinute<-slidedTherapist[borneInf:borneSup]
slidedPatientMinute<-slidedPatient[borneInf:borneSup]
slidedVideoDF <- data.frame(slidedFatherMinute, slidedMotherMinute, slidedTherapistMinute, slidedPatientMinute, "frames"= 1:length(slidedFatherMinute),  "minute"= 1:length(slidedFatherMinute)/25)
str (slidedVideoDF)
plot (slidedVideoDF$minute, slidedVideoDF$slidedMotherMinute, type="l", col="red",
main=paste("Motion history with Sliding interval function during
minute ", i, " in F1044C video", sep=""),
ylab="Motion history", xlab="Number of frame", ylim=c(0, 12E-03))
#     xaxp=c(0, length(slidedFatherMinute), length(slidedFatherMinute)))
lines(slidedVideoDF$minute, slidedVideoDF$slidedFatherMinute, col="blue")
lines(slidedVideoDF$minute, slidedVideoDF$slidedTherapistMinute, col="orange")
lines(slidedVideoDF$minute, slidedVideoDF$slidedPatientMinute, col="green")
legend("top", inset=.05, ParticipantsList,
fill=colOrderList, cex=0.7)}
str(data)
