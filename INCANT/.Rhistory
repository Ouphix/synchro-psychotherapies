library("lme4")
## For managing data frames easilly : rbinds function
library("plyr")
## For editing string
library("stringr")
setwd("/Users/Ofix/Documents/Fac/internat/Recherche/projets/synchro/synchroData")
list <- list.files("INCANT/CSV/csvF104422022016", full.names=TRUE)
list <- list.files("Data/CSV/raw", full.names=TRUE)
setwd("/Users/Ofix/Documents/Fac/internat/Recherche/projets/synchro/synchroData/INCANT")
list <- list.files("Data/CSV/raw", full.names=TRUE)
FullnameList <- list.files("Data/CSV/raw", full.names=TRUE)
filesList <- list.files("Data/CSV/raw", full.names=FALSE)
library("lme4")
## For managing data frames easilly : rbinds function
library("plyr")
## For editing string
library("stringr")
setwd("/Users/Ofix/Documents/Fac/internat/Recherche/projets/synchro/synchroData/INCANT")
setwd("/Users/Ofix/Documents/Fac/internat/Recherche/projets/synchro/synchroData/INCANT")
FullnameList <- list.files("Data/CSV/raw", full.names=TRUE)
## Create a function files list, make a function of it, takes a directory, returns indexList
filesList <- list.files("Data/CSV/raw", full.names=FALSE)
indexList <- c()
for (i in filesList){
a <- str_count(i)-17
name <- substr(i, 1, a)
indexList <- c(indexList, name)
}
indexList <- c()
for (i in filesList){
a <- str_count(i)-17
name <- substr(i, 1, a)
indexList <- c(indexList, name)
}
importdata <-function(FullnameList){
data <- c()
for (i in FullnameList){
dataAlone <-read.csv(i)
## delete empty lines (problem of conversion of the file) from VOB to avi
for (i in 1:nrow(dataAlone)){
print (dataAlone[i, 2:5])
}
data <- rbind(data, dataAlone)}
return (data)}
importdata(list)
importdata <-function(FullnameList){
data <- c()
for (i in FullnameList){
dataAlone <- read.csv(i)
## delete empty lines (problem of conversion of the file) from VOB to avi
for (i in 1:nrow(dataAlone)){
print (dataAlone[i, 2:5])
}
data <- rbind(data, dataAlone)}
return (data)}
importdata(FullnameList)
importdata <-function(FullnameList){
data <- c()
for (i in FullnameList){
dataAlone <- read.csv(i)
## delete empty lines (problem of conversion of the file) from VOB to avi
for (i in 1:nrow(dataAlone)){
motionHistoryData <- dataAlone[i, 2:5]
print (is.na(motionHistoryData))
}
data <- rbind(data, dataAlone)}
return (data)}
importdata(FullnameList)
importdata <-function(FullnameList){
data <- c()
for (i in FullnameList){
dataAlone <- read.csv(i)
## delete empty lines (problem of conversion of the file) from VOB to avi
for (i in 1:nrow(dataAlone)){
motionHistoryData <- dataAlone[i, 2:5]
print (all(is.na(motionHistoryData)))
}
data <- rbind(data, dataAlone)}
return (data)}
importdata(FullnameList)
importdata <-function(FullnameList){
data <- c()
for (i in FullnameList){
dataAlone <- read.csv(i)
## delete empty lines (problem of conversion of the file) from VOB to avi
for (i in 1:nrow(dataAlone)){
motionHistoryData <- dataAlone[i, 2:5]
print (is.na(motionHistoryData))
}
data <- rbind(data, dataAlone)}
return (data)}
importdata(FullnameList)
importdata <-function(FullnameList){
data <- c()
for (i in FullnameList){
dataAlone <- read.csv(i)
## delete empty lines (problem of conversion of the file) from VOB to avi
for (i in 1:nrow(dataAlone)){
motionHistoryData <- dataAlone[i, 2:5]
print (all(is.na(motionHistoryData)))
}
data <- rbind(data, dataAlone)}
return (data)}
importdata(FullnameList)
importdata <-function(FullnameList){
data <- c()
for (i in FullnameList){
dataAlone <- read.csv(i)
## delete empty lines (problem of conversion of the file) from VOB to avi
for (i in 1:nrow(dataAlone)){
motionHistoryData <- dataAlone[i, 2:5]
if (all(!is.na(motionHistoryData)))
{print (dataAlone[i,])
dataAlone[-i,]}
}
data <- rbind(data, dataAlone)}
return (data)}
importdata(FullnameList)
importdata <-function(FullnameList){
data <- c()
for (i in FullnameList){
dataAlone <- read.csv(i)
## delete empty lines (problem of conversion of the file) from VOB to avi
for (i in 1:nrow(dataAlone)){
motionHistoryData <- dataAlone[i, 2:5]
print((all(!is.na(motionHistoryData))))
if (all(!is.na(motionHistoryData)))
{print (dataAlone[i,])
dataAlone[-i,]}
}
data <- rbind(data, dataAlone)}
return (data)}
importdata(FullnameList)
importdata <-function(FullnameList){
data <- c()
for (i in FullnameList){
dataAlone <- read.csv(i)
## delete empty lines (problem of conversion of the file) from VOB to avi
for (i in 1:nrow(dataAlone)){
motionHistoryData <- dataAlone[i, 2:5]
print(i)
print((all(!is.na(motionHistoryData))))
if (all(!is.na(motionHistoryData)))
{print (dataAlone[i,])
dataAlone[-i,]}
}
data <- rbind(data, dataAlone)}
return (data)}
importdata(FullnameList)
importdata <-function(FullnameList){
data <- c()
for (i in FullnameList){
dataAlone <- read.csv(i)
## delete empty lines (problem of conversion of the file) from VOB to avi
for (i in 1:nrow(dataAlone)){
motionHistoryData <- dataAlone[i, 2:5]
print(i)
print((all(is.na(motionHistoryData))))
if (all(is.na(motionHistoryData)))
{print (dataAlone[i,])
dataAlone[-i,]}
}
data <- rbind(data, dataAlone)}
return (data)}
importdata(FullnameList)
importdata <-function(FullnameList){
data <- c()
for (i in FullnameList){
dataAlone <- read.csv(i)
## delete empty lines (problem of conversion of the file) from VOB to avi
for (i in 1:nrow(dataAlone)){
motionHistoryData <- dataAlone[i, 2:5]
if (all(is.na(motionHistoryData)))
{print (dataAlone[i,])
dataAlone[-i,]}
}
data <- rbind(data, dataAlone)}
return (data)}
importdata(FullnameList)
importdata <-function(FullnameList){
data <- c()
for (i in FullnameList){
dataAlone <- read.csv(i)
## delete empty lines (problem of conversion of the file) from VOB to avi
for (i in 1:nrow(dataAlone)){
motionHistoryData <- dataAlone[i, 2:5]
if (all(is.na(motionHistoryData)))
{dataAlone <- dataAlone[-i,]}}
data <- rbind(data, dataAlone)}
return (data)}
importdata <-function(FullnameList){
data <- c()
for (i in FullnameList){
dataAlone <- read.csv(i)
## delete empty lines (problem of conversion of the file) from VOB to avi
str(dataAlone)
for (i in 1:nrow(dataAlone)){
motionHistoryData <- dataAlone[i, 2:5]
if (all(is.na(motionHistoryData)))
{dataAlone <- dataAlone[-i,]}}
str(dataAlone)
data <- rbind(data, dataAlone)}
return (data)}
importdata(FullnameList)
