setwd("/Users/Ofix/Documents/Fac/internat/Recherche/projets/synchro/synchroData/Git/INCANT/")
library("lme4")
library("plyr")
library("stringr")
FullnameList <- list.files("Data/CSV/MotionHistory/raw", full.names=TRUE)
filesList <- list.files("Data/CSV/MotionHistory/raw", full.names=FALSE)
indexList <- c()
for (i in filesList){
a <- str_count(i)-17
name <- substr(i, 1, a)
indexList <- c(indexList, name)
}
importdata <-function(FullnameList){
data <- c()
for (i in FullnameList){
dataAlone <- read.csv(i)
mydata.nas <- apply(dataAlone, 1, function(x){all(is.na(x))})
dataAlone <- dataAlone[!mydata.nas,]
data <- rbind(data, dataAlone)
}
return (data)
}
data <- importdata(FullnameList)
MeanMotionByTime <- function(subject, indexOfvideos=1:NumberOfvideos, interval, data){
x <- c()
for (file in indexList[indexOfvideos]){
dataVector <- data[which(data$indexList==file), subject]
## with ceiling : superior limit of the round
IntervalNumbersVideo <- ceiling(length(dataVector)/interval)
for (i in 1:IntervalNumbersVideo){
borneinf<- 1+(i-1)*interval
bornesup <-i*interval
dataVectorInterval <- dataVector[borneinf:bornesup]
mean <- mean(dataVectorInterval, na.rm=TRUE)
x <- c(x, mean)}}
return (x)}
SlidingInterval <- function(subject, indexOfvideos=1:NumberOfvideos, interval, data)
{x <- c()
for (file in indexList[indexOfvideos]){
dataVector <- data[which(data$indexList==file), subject]
NBofAnalysedFrames <- length(dataVector)-interval+1
for (i in 1:NBofAnalysedFrames){
borneinf<- (i)
bornesup <-(interval-1+i)
dataVectorInterval <- dataVector[borneinf:bornesup]
mean <- mean(dataVectorInterval, na.rm=TRUE)
x <- c(x, mean)}}
return (x)}
labelvideolist  <-c()
for (i in indexList){
a <- str_count(i)
name <- substr(i, 6, a)
labelvideolist <- c(labelvideolist, name)
}
FilesName <- data.frame(unique(data$file), filesList, indexList, labelvideolist)
NumberOfvideos <- length(indexList)
colOrderList <- c("blue","red", "green","orange")
ParticipantsList <- c("father", "mother", "patient", "therapist")
data <- merge(data, FilesName, by.x="file", by.y="unique.data.file.", all=TRUE)
data$timeMin <- data$frame/(25*60)
data$logFather <- log(data$father)
sort(data$logFather)
data$logFather <- log(data$father)
sort(data$logFather)
log(NA)
log(0)
data$logFather[which(data$logFather==-Inf)] <- 0
sort(data$logFather)
setwd("/Users/Ofix/Documents/Fac/internat/Recherche/projets/synchro/synchroData/Git/INCANT/")
library("lme4")
library("plyr")
library("stringr")
FullnameList <- list.files("Data/CSV/MotionHistory/raw", full.names=TRUE)
filesList <- list.files("Data/CSV/MotionHistory/raw", full.names=FALSE)
indexList <- c()
for (i in filesList){
a <- str_count(i)-17
name <- substr(i, 1, a)
indexList <- c(indexList, name)
}
importdata <-function(FullnameList){
data <- c()
for (i in FullnameList){
dataAlone <- read.csv(i)
mydata.nas <- apply(dataAlone, 1, function(x){all(is.na(x))})
dataAlone <- dataAlone[!mydata.nas,]
data <- rbind(data, dataAlone)
}
return (data)
}
data <- importdata(FullnameList)
MeanMotionByTime <- function(subject, indexOfvideos=1:NumberOfvideos, interval, data){
x <- c()
for (file in indexList[indexOfvideos]){
dataVector <- data[which(data$indexList==file), subject]
## with ceiling : superior limit of the round
IntervalNumbersVideo <- ceiling(length(dataVector)/interval)
for (i in 1:IntervalNumbersVideo){
borneinf<- 1+(i-1)*interval
bornesup <-i*interval
dataVectorInterval <- dataVector[borneinf:bornesup]
mean <- mean(dataVectorInterval, na.rm=TRUE)
x <- c(x, mean)}}
return (x)}
```
SlidingInterval <- function(subject, indexOfvideos=1:NumberOfvideos, interval, data)
{x <- c()
for (file in indexList[indexOfvideos]){
dataVector <- data[which(data$indexList==file), subject]
NBofAnalysedFrames <- length(dataVector)-interval+1
for (i in 1:NBofAnalysedFrames){
borneinf<- (i)
bornesup <-(interval-1+i)
dataVectorInterval <- dataVector[borneinf:bornesup]
mean <- mean(dataVectorInterval, na.rm=TRUE)
x <- c(x, mean)}}
return (x)}
labelvideolist  <-c()
for (i in indexList){
a <- str_count(i)
name <- substr(i, 6, a)
labelvideolist <- c(labelvideolist, name)
}
FilesName <- data.frame(unique(data$file), filesList, indexList, labelvideolist)
NumberOfvideos <- length(indexList)
colOrderList <- c("blue","red", "green","orange")
ParticipantsList <- c("father", "mother", "patient", "therapist")
data <- merge(data, FilesName, by.x="file", by.y="unique.data.file.", all=TRUE)
data$timeMin <- data$frame/(25*60)
data$logFather <- log(data$father)
sort(data$logFather)
str(data$logFather)
data$norm.logFather <- data$logFather+20
data$norm.logFather[which(data$norm.logFather==-Inf)] <- 0
sort(data$norm.logFather)
data <- merge(data, FilesName, by.x="file", by.y="unique.data.file.", all=TRUE)
data$timeMin <- data$frame/(25*60)
data$logFather <- log(data$father)
sort(data$logFather)
str(data$logFather)
data$norm.logFather <- data$logFather+20
data$norm.logFather[which(data$norm.logFather==-Inf)] <- 0
str(data$norm.logFather)
sort(data$norm.logFather)
data$logPatient <- log(data$patient)
hist(data$logPatient)
data$norm.logPatient <- data$logPatient+20
data$norm.logPatient[which(data$norm.logPatient==-Inf)] <- 0
hist(data$norm.logPatient)
str(data$norm.logPatient)
sort(data$norm.logPatient)
